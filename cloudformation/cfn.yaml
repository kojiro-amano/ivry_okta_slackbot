# see: https://ops.jig-saw.com/tech-cate/terraform-aws-cloudformation

AWSTemplateFormatVersion: "2010-09-09"
Description: "Create S3 and DynamoDB resources for Terraform backend"
Parameters:
  ResourceNamePrefix:
    Type: String
    Description: "The prefix for the resource names (S3 bucket and DynamoDB table)"
    Default: "stg-okta-slackbot"

Resources:
  TerraformStateBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ResourceNamePrefix}-terraform-state"
      VersioningConfiguration:
        Status: "Enabled"
      LifecycleConfiguration:
        Rules:
          - Id: ExpireNoncurrentVersions
            NoncurrentVersionExpiration:
              NewerNoncurrentVersions: 3
              NoncurrentDays: 1
            Status: Enabled
      AccessControl: "Private"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  DynamoDBLockTable:
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: !Sub "${ResourceNamePrefix}-terraform-lock"
      AttributeDefinitions:
        - AttributeName: "LockID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "LockID"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"

  TerraformS3BackendPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: s3:ListBucket
            Resource: !GetAtt TerraformStateBucket.Arn
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource: !Sub ${TerraformStateBucket.Arn}/*
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
            Resource: !GetAtt DynamoDBLockTable.Arn
          - Effect: Allow
            Action:
              - ecr:*
            Resource: "*"

  TerraformUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub "${ResourceNamePrefix}-terraform-user"
      ManagedPolicyArns:
        - !Ref TerraformS3BackendPolicy

  EcrRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${ResourceNamePrefix}
      ImageTagMutability: MUTABLE
Outputs:
  TerraformStateBucketName:
    Description: "The name of the S3 bucket for storing Terraform state files"
    Value: !Ref TerraformStateBucket

  DynamoDBLockTableName:
    Description: "The name of the DynamoDB table for Terraform state locking"
    Value: !Ref DynamoDBLockTable
